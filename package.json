{
  "name": "moleculer-db-adapter-typeorm",
  "version": "0.0.7",
  "description": "typescript sql adapter using typeorm",
  "main": "./src/adapter.ts",
  "types": "./src/index.d.ts",
  "scripts": {
    "build": "npm run clean && npm run tsc && npm run copy-types",
    "copy-types": "copyfiles -u 1 ./src/*.d.ts ./dist",
    "dev": "node dist/examples/integration/index.js",
    "test": "jest --coverage",
    "test:travis": "jest --coverage --coverageReporters=text-lcov | coveralls",
    "lint": "tslint -p tsconfig.json",
    "deploy": "npm version patch -m \"Release v%s\" && npm publish",
    "tsc": "tsc --declaration",
    "clean": "rimraf dist/*",
    "preversion": "npm test",
    "postversion": "git push origin master && git push --follow-tags"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dkuida/moleculer-db-adapter-typeorm.git"
  },
  "keywords": [
    "moleculer",
    "database",
    "typeorm"
  ],
  "author": "Dan Kuida",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/dkuida/moleculer-db-adapter-typeorm/issues"
  },
  "homepage": "https://github.com/dkuida/moleculer-db-adapter-typeorm#readme",
  "devDependencies": {
    "@types/bluebird": "^3.5.24",
    "@types/jest": "^23.3.9",
    "@types/node": "^10.12.2",
    "bluebird": "^3.5.3",
    "chalk": "^2.4.1",
    "copyfiles": "^2.1.0",
    "coveralls": "^3.0.2",
    "eslint": "^5.9.0",
    "jest": "^23.6.0",
    "jest-cli": "^23.6.0",
    "moleculer": "^0.13.4",
    "moleculer-decorators": "^1.0.16",
    "sqlite": "^3.0.0",
    "ts-jest": "^23.10.4",
    "ts-node": "^7.0.1",
    "tslint": "^5.11.0",
    "tslint-eslint-rules": "^5.4.0",
    "typescript": "^3.1.6",
    "typescript-eslint-parser": "^21.0.1"
  },
  "dependencies": {
    "reflect-metadata": "^0.1.12",
    "typeorm": "^0.2.9",
    "moleculer-db": "^0.7.6"
  },
  "engines": {
    "node": ">= 8.x.x"
  },
  "jest": {
    "testEnvironment": "node",
    "rootDir": "./",
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx}"
    ],
    "roots": [
      "./test"
    ],
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": ".*\\.(test|spec).(ts|js)$",
    "globals": {
      "ts-jest": {
        "tsConfig": "./tsconfig.json"
      }
    },
    "setupFiles": [],
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  }
}
